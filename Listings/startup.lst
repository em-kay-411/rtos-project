


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* STARTUP.S: Startup file for Philips LPC2000         
                                             */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */ 
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2005-2007 Keil Software. All rights re
                       served.               */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         
   14 00000000         ;/*
   15 00000000         ; *  The STARTUP.S code is executed after CPU Reset. Thi
                       s file may be 
   16 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   17 00000000         ; *  symbols are entered under Options - ASM - Define.
   18 00000000         ; *
   19 00000000         ; *  REMAP: when set the startup code initializes the re
                       gister MEMMAP 
   20 00000000         ; *  which overwrites the settings of the CPU configurat
                       ion pins. The 
   21 00000000         ; *  startup and interrupt vectors are remapped from:
   22 00000000         ; *     0x00000000  default setting (not remapped)
   23 00000000         ; *     0x80000000  when EXTMEM_MODE is used
   24 00000000         ; *     0x40000000  when RAM_MODE is used
   25 00000000         ; *
   26 00000000         ; *  EXTMEM_MODE: when set the device is configured for 
                       code execution
   27 00000000         ; *  from external memory starting at address 0x80000000
                       .
   28 00000000         ; *
   29 00000000         ; *  RAM_MODE: when set the device is configured for cod
                       e execution
   30 00000000         ; *  from on-chip RAM starting at address 0x40000000.
   31 00000000         ; *
   32 00000000         ; *  EXTERNAL_MODE: when set the PIN2SEL values are writ
                       ten that enable
   33 00000000         ; *  the external BUS at startup.
   34 00000000         ; */
   35 00000000         
   36 00000000         
   37 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   38 00000000         
   39 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Mode_USR
                               EQU              0x10
   40 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   41 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   42 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   43 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   44 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   45 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   46 00000000         
   47 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   48 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   49 00000000         
   50 00000000         
   51 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   52 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   53 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   54 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   55 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   56 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   57 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   58 00000000         ;// </h>
   59 00000000         
   60 00000000 00000200 
                       UND_Stack_Size
                               EQU              0x00000200
   61 00000000 00000200 
                       SVC_Stack_Size
                               EQU              0x00000200
   62 00000000 00000200 
                       ABT_Stack_Size
                               EQU              0x00000200
   63 00000000 00000100 
                       FIQ_Stack_Size
                               EQU              0x00000100
   64 00000000 00000200 
                       IRQ_Stack_Size
                               EQU              0x00000200
   65 00000000 00000800 
                       USR_Stack_Size
                               EQU              0x00000800
   66 00000000         
   68 00000000 00000900 
                       ISR_Stack_Size



ARM Macro Assembler    Page 3 


                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   69 00000000         
   70 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   71 00000000         
   72 00000000         Stack_Mem
                               SPACE            USR_Stack_Size
   73 00000800         __initial_sp
                               SPACE            ISR_Stack_Size
   74 00001100         
   75 00001100         Stack_Top
   76 00001100         
   77 00001100         
   78 00001100         ;// <h> Heap Configuration
   79 00001100         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
   80 00001100         ;// </h>
   81 00001100         
   82 00001100 00000000 
                       Heap_Size
                               EQU              0x00000000
   83 00001100         
   84 00001100                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   85 00000000         __heap_base
   86 00000000         Heap_Mem
                               SPACE            Heap_Size
   87 00000000         __heap_limit
   88 00000000         
   89 00000000         
   90 00000000         ; VPBDIV definitions
   91 00000000 E01FC100 
                       VPBDIV  EQU              0xE01FC100  ; VPBDIV Address
   92 00000000         
   93 00000000         ;// <e> VPBDIV Setup
   94 00000000         ;// <i> Peripheral Bus Clock Rate
   95 00000000         ;//   <o1.0..1>   VPBDIV: VPB Clock
   96 00000000         ;//               <0=> VPB Clock = CPU Clock / 4
   97 00000000         ;//               <1=> VPB Clock = CPU Clock
   98 00000000         ;//               <2=> VPB Clock = CPU Clock / 2
   99 00000000         ;//   <o1.4..5>   XCLKDIV: XCLK Pin
  100 00000000         ;//               <0=> XCLK Pin = CPU Clock / 4
  101 00000000         ;//               <1=> XCLK Pin = CPU Clock
  102 00000000         ;//               <2=> XCLK Pin = CPU Clock / 2
  103 00000000         ;// </e>
  104 00000000 00000000 
                       VPBDIV_SETUP
                               EQU              0
  105 00000000 00000020 
                       VPBDIV_Val
                               EQU              0x00000020
  106 00000000         
  107 00000000         
  108 00000000         ; Phase Locked Loop (PLL) definitions
  109 00000000 E01FC080 
                       PLL_BASE
                               EQU              0xE01FC080  ; PLL Base Address
  110 00000000 00000000 



ARM Macro Assembler    Page 4 


                       PLLCON_OFS
                               EQU              0x00        ; PLL Control Offse
                                                            t
  111 00000000 00000004 
                       PLLCFG_OFS
                               EQU              0x04        ; PLL Configuration
                                                             Offset
  112 00000000 00000008 
                       PLLSTAT_OFS
                               EQU              0x08        ; PLL Status Offset
                                                            
  113 00000000 0000000C 
                       PLLFEED_OFS
                               EQU              0x0C        ; PLL Feed Offset
  114 00000000 00000001 
                       PLLCON_PLLE
                               EQU              (1<<0)      ; PLL Enable
  115 00000000 00000002 
                       PLLCON_PLLC
                               EQU              (1<<1)      ; PLL Connect
  116 00000000 0000001F 
                       PLLCFG_MSEL
                               EQU              (0x1F<<0)   ; PLL Multiplier
  117 00000000 00000060 
                       PLLCFG_PSEL
                               EQU              (0x03<<5)   ; PLL Divider
  118 00000000 00000400 
                       PLLSTAT_PLOCK
                               EQU              (1<<10)     ; PLL Lock Status
  119 00000000         
  120 00000000         ;// <e> PLL Setup
  121 00000000         ;//   <o1.0..4>   MSEL: PLL Multiplier Selection
  122 00000000         ;//               <1-32><#-1>
  123 00000000         ;//               <i> M Value
  124 00000000         ;//   <o1.5..6>   PSEL: PLL Divider Selection
  125 00000000         ;//               <0=> 1   <1=> 2   <2=> 4   <3=> 8
  126 00000000         ;//               <i> P Value
  127 00000000         ;// </e>
  128 00000000 00000000 
                       PLL_SETUP
                               EQU              0
  129 00000000 00000004 
                       PLLCFG_Val
                               EQU              0x00000004
  130 00000000         
  131 00000000         
  132 00000000         ; Memory Accelerator Module (MAM) definitions
  133 00000000 E01FC000 
                       MAM_BASE
                               EQU              0xE01FC000  ; MAM Base Address
  134 00000000 00000000 
                       MAMCR_OFS
                               EQU              0x00        ; MAM Control Offse
                                                            t
  135 00000000 00000004 
                       MAMTIM_OFS
                               EQU              0x04        ; MAM Timing Offset
                                                            
  136 00000000         



ARM Macro Assembler    Page 5 


  137 00000000         ;// <e> MAM Setup
  138 00000000         ;//   <o1.0..1>   MAM Control
  139 00000000         ;//               <0=> Disabled
  140 00000000         ;//               <1=> Partially Enabled
  141 00000000         ;//               <2=> Fully Enabled
  142 00000000         ;//               <i> Mode
  143 00000000         ;//   <o2.0..2>   MAM Timing
  144 00000000         ;//               <0=> Reserved  <1=> 1   <2=> 2   <3=> 
                       3
  145 00000000         ;//               <4=> 4         <5=> 5   <6=> 6   <7=> 
                       7
  146 00000000         ;//               <i> Fetch Cycles
  147 00000000         ;// </e>
  148 00000000 00000000 
                       MAM_SETUP
                               EQU              0
  149 00000000 00000002 
                       MAMCR_Val
                               EQU              0x00000002
  150 00000000 00000004 
                       MAMTIM_Val
                               EQU              0x00000004
  151 00000000         
  152 00000000         
  153 00000000         ; External Memory Controller (EMC) definitions
  154 00000000 FFE00000 
                       EMC_BASE
                               EQU              0xFFE00000  ; EMC Base Address
  155 00000000 00000000 
                       BCFG0_OFS
                               EQU              0x00        ; BCFG0 Offset
  156 00000000 00000004 
                       BCFG1_OFS
                               EQU              0x04        ; BCFG1 Offset
  157 00000000 00000008 
                       BCFG2_OFS
                               EQU              0x08        ; BCFG2 Offset
  158 00000000 0000000C 
                       BCFG3_OFS
                               EQU              0x0C        ; BCFG3 Offset
  159 00000000         
  160 00000000         ;// <e> External Memory Controller (EMC)
  161 00000000 00000001 
                       EMC_SETUP
                               EQU              1
  162 00000000         
  163 00000000         ;//   <e> Bank Configuration 0 (BCFG0)
  164 00000000         ;//     <o1.0..3>   IDCY: Idle Cycles <0-15>
  165 00000000         ;//     <o1.5..9>   WST1: Wait States 1 <0-31>
  166 00000000         ;//     <o1.11..15> WST2: Wait States 2 <0-31>
  167 00000000         ;//     <o1.10>     RBLE: Read Byte Lane Enable
  168 00000000         ;//     <o1.26>     WP: Write Protect
  169 00000000         ;//     <o1.27>     BM: Burst ROM
  170 00000000         ;//     <o1.28..29> MW: Memory Width  <0=>  8-bit  <1=> 
                       16-bit
  171 00000000         ;//                                   <2=> 32-bit  <3=> 
                       Reserved
  172 00000000         ;//   </e>
  173 00000000 00000000 



ARM Macro Assembler    Page 6 


                       BCFG0_SETUP
                               EQU              0
  174 00000000 0000FBEF 
                       BCFG0_Val
                               EQU              0x0000FBEF
  175 00000000         
  176 00000000         ;//   <e> Bank Configuration 1 (BCFG1)
  177 00000000         ;//     <o1.0..3>   IDCY: Idle Cycles <0-15>
  178 00000000         ;//     <o1.5..9>   WST1: Wait States 1 <0-31>
  179 00000000         ;//     <o1.11..15> WST2: Wait States 2 <0-31>
  180 00000000         ;//     <o1.10>     RBLE: Read Byte Lane Enable
  181 00000000         ;//     <o1.26>     WP: Write Protect
  182 00000000         ;//     <o1.27>     BM: Burst ROM
  183 00000000         ;//     <o1.28..29> MW: Memory Width  <0=>  8-bit  <1=> 
                       16-bit
  184 00000000         ;//                                   <2=> 32-bit  <3=> 
                       Reserved
  185 00000000         ;//   </e>
  186 00000000 00000000 
                       BCFG1_SETUP
                               EQU              0
  187 00000000 0000FBEF 
                       BCFG1_Val
                               EQU              0x0000FBEF
  188 00000000         
  189 00000000         ;//   <e> Bank Configuration 2 (BCFG2)
  190 00000000         ;//     <o1.0..3>   IDCY: Idle Cycles <0-15>
  191 00000000         ;//     <o1.5..9>   WST1: Wait States 1 <0-31>
  192 00000000         ;//     <o1.11..15> WST2: Wait States 2 <0-31>
  193 00000000         ;//     <o1.10>     RBLE: Read Byte Lane Enable
  194 00000000         ;//     <o1.26>     WP: Write Protect
  195 00000000         ;//     <o1.27>     BM: Burst ROM
  196 00000000         ;//     <o1.28..29> MW: Memory Width  <0=>  8-bit  <1=> 
                       16-bit
  197 00000000         ;//                                   <2=> 32-bit  <3=> 
                       Reserved
  198 00000000         ;//   </e>
  199 00000000 00000000 
                       BCFG2_SETUP
                               EQU              0
  200 00000000 0000FBEF 
                       BCFG2_Val
                               EQU              0x0000FBEF
  201 00000000         
  202 00000000         ;//   <e> Bank Configuration 3 (BCFG3)
  203 00000000         ;//     <o1.0..3>   IDCY: Idle Cycles <0-15>
  204 00000000         ;//     <o1.5..9>   WST1: Wait States 1 <0-31>
  205 00000000         ;//     <o1.11..15> WST2: Wait States 2 <0-31>
  206 00000000         ;//     <o1.10>     RBLE: Read Byte Lane Enable
  207 00000000         ;//     <o1.26>     WP: Write Protect
  208 00000000         ;//     <o1.27>     BM: Burst ROM
  209 00000000         ;//     <o1.28..29> MW: Memory Width  <0=>  8-bit  <1=> 
                       16-bit
  210 00000000         ;//                                   <2=> 32-bit  <3=> 
                       Reserved
  211 00000000         ;//   </e>
  212 00000000 00000000 
                       BCFG3_SETUP
                               EQU              0



ARM Macro Assembler    Page 7 


  213 00000000 0000FBEF 
                       BCFG3_Val
                               EQU              0x0000FBEF
  214 00000000         
  215 00000000         ;// </e> End of EMC
  216 00000000         
  217 00000000         
  218 00000000         ; External Memory Pins definitions
  219 00000000 E002C014 
                       PINSEL2 EQU              0xE002C014  ; PINSEL2 Address
  220 00000000 0E6149E4 
                       PINSEL2_Val
                               EQU              0x0E6149E4  ; CS0..3, OE, WE, B
                                                            LS0..3, 
  221 00000000         ; D0..31, A2..23, JTAG Pins
  222 00000000         
  223 00000000         
  224 00000000                 PRESERVE8
  225 00000000         
  226 00000000         
  227 00000000         ; Area Definition and Entry Point
  228 00000000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
  229 00000000         
  230 00000000                 AREA             RESET, CODE, READONLY
  231 00000000                 ARM
  232 00000000         
  233 00000000         ;*******************************************************
                       ***********************
  234 00000000         ;                                  IMPORTS
  235 00000000         ;*******************************************************
                       ***********************
  236 00000000         
  237 00000000                 IMPORT           OS_CPU_ARM_ExceptUndefInstrHndl
r
  238 00000000                 IMPORT           OS_CPU_ARM_ExceptSwiHndlr
  239 00000000                 IMPORT           OS_CPU_ARM_ExceptPrefetchAbortH
ndlr
  240 00000000                 IMPORT           OS_CPU_ARM_ExceptDataAbortHndlr
  241 00000000                 IMPORT           OS_CPU_ARM_ExceptIrqHndlr
  242 00000000                 IMPORT           OS_CPU_ARM_ExceptFiqHndlr
  243 00000000         
  244 00000000         
  245 00000000         
  246 00000000         ; Exception Vectors
  247 00000000         ;  Mapped to Address 0.
  248 00000000         ;  Absolute addressing mode must be used.
  249 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
  250 00000000         
  251 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
  252 00000004 E59FF018        LDR              PC, Undef_Addr
  253 00000008 E59FF018        LDR              PC, SWI_Addr
  254 0000000C E59FF018        LDR              PC, PAbt_Addr
  255 00000010 E59FF018        LDR              PC, DAbt_Addr
  256 00000014 E1A00000        NOP                          ; Reserved Vector 
  257 00000018 E59FF018        LDR              PC, IRQ_Addr
  258 0000001C         ; LDR     PC, [PC, #-0x0FF0]     ; Vector from VicVectAd



ARM Macro Assembler    Page 8 


                       dr
  259 0000001C E59FF018        LDR              PC, FIQ_Addr
  260 00000020         
  261 00000020 00000000 
                       Reset_Addr
                               dcd              Reset_Handler
  262 00000024 00000000 
                       Undef_Addr
                               dcd              OS_CPU_ARM_ExceptUndefInstrHndl
r
  263 00000028 00000000 
                       SWI_Addr
                               dcd              OS_CPU_ARM_ExceptSwiHndlr
  264 0000002C 00000000 
                       PAbt_Addr
                               dcd              OS_CPU_ARM_ExceptPrefetchAbortH
ndlr
  265 00000030 00000000 
                       DAbt_Addr
                               dcd              OS_CPU_ARM_ExceptDataAbortHndlr
  266 00000034 E1A00000        nop
  267 00000038 00000000 
                       IRQ_Addr
                               dcd              OS_CPU_ARM_ExceptIrqHndlr
  268 0000003C 00000000 
                       FIQ_Addr
                               dcd              OS_CPU_ARM_ExceptFiqHndlr
  269 00000040         
  270 00000040         ;Undef_Handler   B       Undef_Handler
  271 00000040         ;SWI_Handler     B       SWI_Handler
  272 00000040         ;PAbt_Handler    B       PAbt_Handler
  273 00000040         ;DAbt_Handler    B       DAbt_Handler
  274 00000040         ;IRQ_Handler     B       IRQ_Handler
  275 00000040         ;FIQ_Handler     B       FIQ_Handler
  276 00000040         
  277 00000040         
  278 00000040         ; Reset Handler
  279 00000040         
  280 00000040         
  281 00000040         
  282 00000040         Reset_Handler
  283 00000040         
  284 00000040         
  285 00000040         ; Setup External Memory Pins
  286 00000040                 IF               :DEF:EXTERNAL_MODE
  290                          ENDIF
  291 00000040         
  292 00000040         
  293 00000040         ; Setup External Memory Controller
  294 00000040                 IF               EMC_SETUP <> 0
  295 00000040 E59F0050        LDR              R0, =EMC_BASE
  296 00000044         
  297 00000044                 IF               BCFG0_SETUP <> 0
  300                          ENDIF
  301 00000044         
  302 00000044                 IF               BCFG1_SETUP <> 0
  305                          ENDIF
  306 00000044         
  307 00000044                 IF               BCFG2_SETUP <> 0



ARM Macro Assembler    Page 9 


  310                          ENDIF
  311 00000044         
  312 00000044                 IF               BCFG3_SETUP <> 0
  315                          ENDIF
  316 00000044         
  317 00000044                 ENDIF                        ; EMC_SETUP
  318 00000044         
  319 00000044         
  320 00000044         ; Setup VPBDIV
  321 00000044                 IF               VPBDIV_SETUP <> 0
  325                          ENDIF
  326 00000044         
  327 00000044         
  328 00000044         ; Setup PLL
  329 00000044                 IF               PLL_SETUP <> 0
  352                          ENDIF                        ; PLL_SETUP
  353 00000044         
  354 00000044         
  355 00000044         ; Setup MAM
  356 00000044                 IF               MAM_SETUP <> 0
  362                          ENDIF                        ; MAM_SETUP
  363 00000044         
  364 00000044         
  365 00000044         ; Memory Mapping (when Interrupt Vectors are in RAM)
  366 00000044 E01FC040 
                       MEMMAP  EQU              0xE01FC040  ; Memory Mapping Co
                                                            ntrol
  367 00000044                 IF               :DEF:REMAP
  377                          ENDIF
  378 00000044         
  379 00000044         
  380 00000044         ; Initialise Interrupt System
  381 00000044         ;  ...
  382 00000044         
  383 00000044         
  384 00000044         ; Setup Stack for each mode
  385 00000044         
  386 00000044 E59F0050        LDR              R0, =Stack_Top
  387 00000048         
  388 00000048         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
  389 00000048 E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
  390 0000004C E1A0D000        MOV              SP, R0
  391 00000050 E2400C02        SUB              R0, R0, #UND_Stack_Size
  392 00000054         
  393 00000054         ;  Enter Abort Mode and set its Stack Pointer
  394 00000054 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
  395 00000058 E1A0D000        MOV              SP, R0
  396 0000005C E2400C02        SUB              R0, R0, #ABT_Stack_Size
  397 00000060         
  398 00000060         ;  Enter FIQ Mode and set its Stack Pointer
  399 00000060 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
  400 00000064 E1A0D000        MOV              SP, R0
  401 00000068 E2400C01        SUB              R0, R0, #FIQ_Stack_Size
  402 0000006C         
  403 0000006C         ;  Enter IRQ Mode and set its Stack Pointer



ARM Macro Assembler    Page 10 


  404 0000006C E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
  405 00000070 E1A0D000        MOV              SP, R0
  406 00000074 E2400C02        SUB              R0, R0, #IRQ_Stack_Size
  407 00000078         
  408 00000078         ;  Enter Supervisor Mode and set its Stack Pointer
  409 00000078 E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
  410 0000007C E1A0D000        MOV              SP, R0
  411 00000080 E2400C02        SUB              R0, R0, #SVC_Stack_Size
  412 00000084         
  413 00000084         ;  Enter User Mode and set its Stack Pointer
  414 00000084 E321F010        MSR              CPSR_c, #Mode_USR
  415 00000088                 IF               :DEF:__MICROLIB
  420 00000088         
  421 00000088 E1A0D000        MOV              SP, R0
  422 0000008C E24DAB02        SUB              SL, SP, #USR_Stack_Size
  423 00000090         
  424 00000090                 ENDIF
  425 00000090         
  426 00000090         
  427 00000090         ; Enter the C code
  428 00000090         
  429 00000090                 IMPORT           __main
  430 00000090 E59F0008        LDR              R0, =__main
  431 00000094 E12FFF10        BX               R0
  432 00000098         
  433 00000098         
  434 00000098                 IF               :DEF:__MICROLIB
  440 00000098         ; User Initial Stack & Heap
  441 00000098 FFE00000 
              00000000 
              00000000         AREA             |.text|, CODE, READONLY
  442 00000000         
  443 00000000                 IMPORT           __use_two_region_memory
  444 00000000                 EXPORT           __user_initial_stackheap
  445 00000000         __user_initial_stackheap
  446 00000000         
  447 00000000 E59F000C        LDR              R0, =  Heap_Mem
  448 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
  449 00000008 E59F2004        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
  450 0000000C E59F3008        LDR              R3, = Stack_Mem
  451 00000010 E12FFF1E        BX               LR
  452 00000014                 ENDIF
  453 00000014         
  454 00000014         
  455 00000014                 END
              00000000 
              00000800 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\startup.d -o.\objects\startup.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\A
RM\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --pre
define="__UVISION_VERSION SETA 527" --list=.\listings\startup.lst app\Startup.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 70 in file app\Startup.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 72 in file app\Startup.s
   Uses
      At line 448 in file app\Startup.s
      At line 450 in file app\Startup.s

Stack_Top 00001100

Symbol: Stack_Top
   Definitions
      At line 75 in file app\Startup.s
   Uses
      At line 386 in file app\Startup.s
Comment: Stack_Top used once
__initial_sp 00000800

Symbol: __initial_sp
   Definitions
      At line 73 in file app\Startup.s
   Uses
      None
Comment: __initial_sp unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 84 in file app\Startup.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 86 in file app\Startup.s
   Uses
      At line 447 in file app\Startup.s
      At line 449 in file app\Startup.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 85 in file app\Startup.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 87 in file app\Startup.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 265 in file app\Startup.s
   Uses
      At line 255 in file app\Startup.s
Comment: DAbt_Addr used once
FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 268 in file app\Startup.s
   Uses
      At line 259 in file app\Startup.s
Comment: FIQ_Addr used once
IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 267 in file app\Startup.s
   Uses
      At line 257 in file app\Startup.s
Comment: IRQ_Addr used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 264 in file app\Startup.s
   Uses
      At line 254 in file app\Startup.s
Comment: PAbt_Addr used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 230 in file app\Startup.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 261 in file app\Startup.s
   Uses
      At line 251 in file app\Startup.s
Comment: Reset_Addr used once
Reset_Handler 00000040

Symbol: Reset_Handler
   Definitions
      At line 282 in file app\Startup.s
   Uses
      At line 261 in file app\Startup.s
Comment: Reset_Handler used once
SWI_Addr 00000028

Symbol: SWI_Addr



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 263 in file app\Startup.s
   Uses
      At line 253 in file app\Startup.s
Comment: SWI_Addr used once
Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 262 in file app\Startup.s
   Uses
      At line 252 in file app\Startup.s
Comment: Undef_Addr used once
Vectors 00000000

Symbol: Vectors
   Definitions
      At line 251 in file app\Startup.s
   Uses
      None
Comment: Vectors unused
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 441 in file app\Startup.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 445 in file app\Startup.s
   Uses
      At line 444 in file app\Startup.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000200

Symbol: ABT_Stack_Size
   Definitions
      At line 62 in file app\Startup.s
   Uses
      At line 68 in file app\Startup.s
      At line 396 in file app\Startup.s

BCFG0_OFS 00000000

Symbol: BCFG0_OFS
   Definitions
      At line 155 in file app\Startup.s
   Uses
      None
Comment: BCFG0_OFS unused
BCFG0_SETUP 00000000

Symbol: BCFG0_SETUP
   Definitions
      At line 173 in file app\Startup.s
   Uses
      At line 297 in file app\Startup.s
Comment: BCFG0_SETUP used once
BCFG0_Val 0000FBEF

Symbol: BCFG0_Val
   Definitions
      At line 174 in file app\Startup.s
   Uses
      None
Comment: BCFG0_Val unused
BCFG1_OFS 00000004

Symbol: BCFG1_OFS
   Definitions
      At line 156 in file app\Startup.s
   Uses
      None
Comment: BCFG1_OFS unused
BCFG1_SETUP 00000000

Symbol: BCFG1_SETUP
   Definitions
      At line 186 in file app\Startup.s
   Uses
      At line 302 in file app\Startup.s
Comment: BCFG1_SETUP used once
BCFG1_Val 0000FBEF

Symbol: BCFG1_Val
   Definitions
      At line 187 in file app\Startup.s
   Uses
      None
Comment: BCFG1_Val unused
BCFG2_OFS 00000008




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: BCFG2_OFS
   Definitions
      At line 157 in file app\Startup.s
   Uses
      None
Comment: BCFG2_OFS unused
BCFG2_SETUP 00000000

Symbol: BCFG2_SETUP
   Definitions
      At line 199 in file app\Startup.s
   Uses
      At line 307 in file app\Startup.s
Comment: BCFG2_SETUP used once
BCFG2_Val 0000FBEF

Symbol: BCFG2_Val
   Definitions
      At line 200 in file app\Startup.s
   Uses
      None
Comment: BCFG2_Val unused
BCFG3_OFS 0000000C

Symbol: BCFG3_OFS
   Definitions
      At line 158 in file app\Startup.s
   Uses
      None
Comment: BCFG3_OFS unused
BCFG3_SETUP 00000000

Symbol: BCFG3_SETUP
   Definitions
      At line 212 in file app\Startup.s
   Uses
      At line 312 in file app\Startup.s
Comment: BCFG3_SETUP used once
BCFG3_Val 0000FBEF

Symbol: BCFG3_Val
   Definitions
      At line 213 in file app\Startup.s
   Uses
      None
Comment: BCFG3_Val unused
EMC_BASE FFE00000

Symbol: EMC_BASE
   Definitions
      At line 154 in file app\Startup.s
   Uses
      At line 295 in file app\Startup.s
Comment: EMC_BASE used once
EMC_SETUP 00000001

Symbol: EMC_SETUP
   Definitions
      At line 161 in file app\Startup.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 294 in file app\Startup.s
Comment: EMC_SETUP used once
FIQ_Stack_Size 00000100

Symbol: FIQ_Stack_Size
   Definitions
      At line 63 in file app\Startup.s
   Uses
      At line 68 in file app\Startup.s
      At line 401 in file app\Startup.s

F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 48 in file app\Startup.s
   Uses
      At line 389 in file app\Startup.s
      At line 394 in file app\Startup.s
      At line 399 in file app\Startup.s
      At line 404 in file app\Startup.s
      At line 409 in file app\Startup.s

Heap_Size 00000000

Symbol: Heap_Size
   Definitions
      At line 82 in file app\Startup.s
   Uses
      At line 86 in file app\Startup.s
      At line 449 in file app\Startup.s

IRQ_Stack_Size 00000200

Symbol: IRQ_Stack_Size
   Definitions
      At line 64 in file app\Startup.s
   Uses
      At line 68 in file app\Startup.s
      At line 406 in file app\Startup.s

ISR_Stack_Size 00000900

Symbol: ISR_Stack_Size
   Definitions
      At line 68 in file app\Startup.s
   Uses
      At line 73 in file app\Startup.s
Comment: ISR_Stack_Size used once
I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 47 in file app\Startup.s
   Uses
      At line 389 in file app\Startup.s
      At line 394 in file app\Startup.s
      At line 399 in file app\Startup.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

      At line 404 in file app\Startup.s
      At line 409 in file app\Startup.s

MAMCR_OFS 00000000

Symbol: MAMCR_OFS
   Definitions
      At line 134 in file app\Startup.s
   Uses
      None
Comment: MAMCR_OFS unused
MAMCR_Val 00000002

Symbol: MAMCR_Val
   Definitions
      At line 149 in file app\Startup.s
   Uses
      None
Comment: MAMCR_Val unused
MAMTIM_OFS 00000004

Symbol: MAMTIM_OFS
   Definitions
      At line 135 in file app\Startup.s
   Uses
      None
Comment: MAMTIM_OFS unused
MAMTIM_Val 00000004

Symbol: MAMTIM_Val
   Definitions
      At line 150 in file app\Startup.s
   Uses
      None
Comment: MAMTIM_Val unused
MAM_BASE E01FC000

Symbol: MAM_BASE
   Definitions
      At line 133 in file app\Startup.s
   Uses
      None
Comment: MAM_BASE unused
MAM_SETUP 00000000

Symbol: MAM_SETUP
   Definitions
      At line 148 in file app\Startup.s
   Uses
      At line 356 in file app\Startup.s
Comment: MAM_SETUP used once
MEMMAP E01FC040

Symbol: MEMMAP
   Definitions
      At line 366 in file app\Startup.s
   Uses
      None
Comment: MEMMAP unused



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 43 in file app\Startup.s
   Uses
      At line 394 in file app\Startup.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 40 in file app\Startup.s
   Uses
      At line 399 in file app\Startup.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 41 in file app\Startup.s
   Uses
      At line 404 in file app\Startup.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 42 in file app\Startup.s
   Uses
      At line 409 in file app\Startup.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 45 in file app\Startup.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 44 in file app\Startup.s
   Uses
      At line 389 in file app\Startup.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 39 in file app\Startup.s
   Uses
      At line 414 in file app\Startup.s
Comment: Mode_USR used once
PINSEL2 E002C014

Symbol: PINSEL2



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 219 in file app\Startup.s
   Uses
      None
Comment: PINSEL2 unused
PINSEL2_Val 0E6149E4

Symbol: PINSEL2_Val
   Definitions
      At line 220 in file app\Startup.s
   Uses
      None
Comment: PINSEL2_Val unused
PLLCFG_MSEL 0000001F

Symbol: PLLCFG_MSEL
   Definitions
      At line 116 in file app\Startup.s
   Uses
      None
Comment: PLLCFG_MSEL unused
PLLCFG_OFS 00000004

Symbol: PLLCFG_OFS
   Definitions
      At line 111 in file app\Startup.s
   Uses
      None
Comment: PLLCFG_OFS unused
PLLCFG_PSEL 00000060

Symbol: PLLCFG_PSEL
   Definitions
      At line 117 in file app\Startup.s
   Uses
      None
Comment: PLLCFG_PSEL unused
PLLCFG_Val 00000004

Symbol: PLLCFG_Val
   Definitions
      At line 129 in file app\Startup.s
   Uses
      None
Comment: PLLCFG_Val unused
PLLCON_OFS 00000000

Symbol: PLLCON_OFS
   Definitions
      At line 110 in file app\Startup.s
   Uses
      None
Comment: PLLCON_OFS unused
PLLCON_PLLC 00000002

Symbol: PLLCON_PLLC
   Definitions
      At line 115 in file app\Startup.s
   Uses



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      None
Comment: PLLCON_PLLC unused
PLLCON_PLLE 00000001

Symbol: PLLCON_PLLE
   Definitions
      At line 114 in file app\Startup.s
   Uses
      None
Comment: PLLCON_PLLE unused
PLLFEED_OFS 0000000C

Symbol: PLLFEED_OFS
   Definitions
      At line 113 in file app\Startup.s
   Uses
      None
Comment: PLLFEED_OFS unused
PLLSTAT_OFS 00000008

Symbol: PLLSTAT_OFS
   Definitions
      At line 112 in file app\Startup.s
   Uses
      None
Comment: PLLSTAT_OFS unused
PLLSTAT_PLOCK 00000400

Symbol: PLLSTAT_PLOCK
   Definitions
      At line 118 in file app\Startup.s
   Uses
      None
Comment: PLLSTAT_PLOCK unused
PLL_BASE E01FC080

Symbol: PLL_BASE
   Definitions
      At line 109 in file app\Startup.s
   Uses
      None
Comment: PLL_BASE unused
PLL_SETUP 00000000

Symbol: PLL_SETUP
   Definitions
      At line 128 in file app\Startup.s
   Uses
      At line 329 in file app\Startup.s
Comment: PLL_SETUP used once
SVC_Stack_Size 00000200

Symbol: SVC_Stack_Size
   Definitions
      At line 61 in file app\Startup.s
   Uses
      At line 68 in file app\Startup.s
      At line 411 in file app\Startup.s




ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

UND_Stack_Size 00000200

Symbol: UND_Stack_Size
   Definitions
      At line 60 in file app\Startup.s
   Uses
      At line 68 in file app\Startup.s
      At line 391 in file app\Startup.s

USR_Stack_Size 00000800

Symbol: USR_Stack_Size
   Definitions
      At line 65 in file app\Startup.s
   Uses
      At line 72 in file app\Startup.s
      At line 422 in file app\Startup.s
      At line 448 in file app\Startup.s

VPBDIV E01FC100

Symbol: VPBDIV
   Definitions
      At line 91 in file app\Startup.s
   Uses
      None
Comment: VPBDIV unused
VPBDIV_SETUP 00000000

Symbol: VPBDIV_SETUP
   Definitions
      At line 104 in file app\Startup.s
   Uses
      At line 321 in file app\Startup.s
Comment: VPBDIV_SETUP used once
VPBDIV_Val 00000020

Symbol: VPBDIV_Val
   Definitions
      At line 105 in file app\Startup.s
   Uses
      None
Comment: VPBDIV_Val unused
55 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

OS_CPU_ARM_ExceptDataAbortHndlr 00000000

Symbol: OS_CPU_ARM_ExceptDataAbortHndlr
   Definitions
      At line 240 in file app\Startup.s
   Uses
      At line 265 in file app\Startup.s
Comment: OS_CPU_ARM_ExceptDataAbortHndlr used once
OS_CPU_ARM_ExceptFiqHndlr 00000000

Symbol: OS_CPU_ARM_ExceptFiqHndlr
   Definitions
      At line 242 in file app\Startup.s
   Uses
      At line 268 in file app\Startup.s
Comment: OS_CPU_ARM_ExceptFiqHndlr used once
OS_CPU_ARM_ExceptIrqHndlr 00000000

Symbol: OS_CPU_ARM_ExceptIrqHndlr
   Definitions
      At line 241 in file app\Startup.s
   Uses
      At line 267 in file app\Startup.s
Comment: OS_CPU_ARM_ExceptIrqHndlr used once
OS_CPU_ARM_ExceptPrefetchAbortHndlr 00000000

Symbol: OS_CPU_ARM_ExceptPrefetchAbortHndlr
   Definitions
      At line 239 in file app\Startup.s
   Uses
      At line 264 in file app\Startup.s
Comment: OS_CPU_ARM_ExceptPrefetchAbortHndlr used once
OS_CPU_ARM_ExceptSwiHndlr 00000000

Symbol: OS_CPU_ARM_ExceptSwiHndlr
   Definitions
      At line 238 in file app\Startup.s
   Uses
      At line 263 in file app\Startup.s
Comment: OS_CPU_ARM_ExceptSwiHndlr used once
OS_CPU_ARM_ExceptUndefInstrHndlr 00000000

Symbol: OS_CPU_ARM_ExceptUndefInstrHndlr
   Definitions
      At line 237 in file app\Startup.s
   Uses
      At line 262 in file app\Startup.s
Comment: OS_CPU_ARM_ExceptUndefInstrHndlr used once
__main 00000000

Symbol: __main
   Definitions
      At line 429 in file app\Startup.s
   Uses
      At line 430 in file app\Startup.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 443 in file app\Startup.s
   Uses
      None
Comment: __use_two_region_memory unused
8 symbols
429 symbols in table
